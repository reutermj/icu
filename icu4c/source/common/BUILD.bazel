# Â© 2021 and later: Unicode, Inc. and others.
# License & terms of use: http://www.unicode.org/copyright.html

# This file defines Bazel targets for a subset of ICU4C "common" library header and source files.
# The configuration of dependencies among targets is strongly assisted by the
# file in depstest that maintains such information, at
# icu4c/source/test/depstest/dependencies.txt .

load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library")

package(
    default_visibility = ["//visibility:public"],
)

# When compiling code in the `common` dir, the constant
# `U_COMMON_IMPLEMENTATION` needs to be defined. See 
# https://unicode-org.github.io/icu/userguide/howtouseicu#c-with-your-own-build-system .

# If linker errors occur, then this may be a sign that the dependencies were 
# not specified correctly. Use dependencies.txt in depstest for assistance. See
# https://stackoverflow.com/q/66111709/2077918 .

cc_library(
    name = "common",
    hdrs = glob([
        "unicode/*.h", # public
        "*.h",         # internal
        ],
        # Instead of using these checked-in files, our Bazel build process
        # regenerates them and then uses the new versions.
        # Same list of .h files as in icu4c/source/data/unidata/clean.sh.
        exclude = ["norm2_nfc_data.h", "propname_data.h", "*_props_data.h"],
    ),
    srcs = glob(["*.c", "*.cpp"]),
    # We need to add includes in order to preserve existing source files'
    # include directives that use traditional paths, not paths relative to
    # Bazel workspace:
    # https://stackoverflow.com/a/65635893/2077918
    includes = ["."],
    local_defines = [
        "U_COMMON_IMPLEMENTATION",
    ],
    linkopts = [""-DEFAULTLIB:advapi32.lib""],
)
